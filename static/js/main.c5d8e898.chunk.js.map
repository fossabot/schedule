{"version":3,"sources":["api.tsx","Lists.tsx","SelectGroup.tsx","Schedule/TabsWeekDays.tsx","Schedule/findNearestDay.ts","Schedule/TrimesterInfo.tsx","Schedule/Schedule.tsx","App.tsx","serviceWorker.tsx","index.tsx","constants/index.ts"],"names":["get","_callee","url","response","regenerator_default","a","wrap","_context","prev","next","axios","sent","abrupt","data","stop","api","getFaculties","getFacultiesWithGroups","getGroups","facultyId","concat","getTrimester","getSchedule","groupId","trimesterId","UniversalListPL","props","title","items","loading","_useState","useState","_useState2","Object","slicedToArray","searchValue","setSearchValue","itemsFiltred","filter","item","Group","match","RegExp","FacultyName","Error","react_default","createElement","Fragment","input_default","Search","onChange","event","target","value","placeholder","list_default","dataSource","bordered","renderItem","Item","key","IdGroup","hasSchedule","hasOwnProperty","react_router_dom","to","style","opacity","IdFaculty","UniversalListContainer","_useState3","_useState4","setItems","_useState5","_useState6","setLoading","useEffect","_loadItems","asyncToGenerator","mark","_items","promise","t0","console","error","apply","this","arguments","loadItems","ListFaculties","ListGroups","params","SelectGroup","options","setOptions","then","facultiesWithGroups","convertedFacultiesWithGroups","map","faculty","objectSpread","id","toString","groups","group","catch","log","spin","length","cascader_default","allowClear","size","defaultValue","fieldNames","label","children","showSearch","undefined","TabPane","Tabs","LessonTypes","shortName","fullName","className","columns","render","text","record","index","icon","type","StartTime","Room","lessonType","find","LessonType","Lesson","FIO","TabsWeekDays","tabPosition","setTabPosition","parity","setParity","defaultActiveKey","setDefaultActiveKey","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","_findNearestDay","_ref","week_number","weekday","schedule","minWeekday","v","WeekDay","reduce","min","nextWeekday","i","lesson","Odd","Math","findNearestDay","moment","isoWeekday","String","weekdays","name","WEEK_DAY_NAMES","lessons","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","s","push","err","return","tabsContent","tab","table","showHeader","pagination","rowKey","r","es_switch","checkedChildren","unCheckedChildren","checked","message","info","tabs","animated","TrimesterInfo","today","dateStart","trimester","dateFinish","diff","startOf","week_total","d","valueOf","trimesterProgress","round","format","progress","percent","es_alert","showIcon","Schedule","setTrimester","setSchedule","_useState7","_useState8","weekNumber","setWeekNumber","loadSchedule","_schedule","localStorage","setItem","IdTrimester","status","headers","request","config","_x","_x2","_x3","_props$match$params","_loadTrimester","_callee2","t","_context2","loadTrimester","src_SelectGroup","selectedOptions","_value","history","Schedule_TabsWeekDays","isProduction","process","userAgent","navigator","toLowerCase","test","isIos","standalone","ym","browserHistory","createBrowserHistory","listen","location","action","pathname","search","hash","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","lib","accounts","clickmap","trackLinks","webvisor","version","locale_provider","locale","ru_RU","react_router","menu","mode","theme","path","component","postfix","href","rel","onClick","document","getElementById","URL","origin","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","success","notification","description","placement","__webpack_require__","__webpack_exports__","split"],"mappings":"0aAUeA,+EAAf,SAAAC,EAA4BC,GAA5B,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACyBC,IAAMV,IAAOE,GADtC,cACQC,EADRI,EAAAI,KAAAJ,EAAAK,OAAA,SAEST,EAASU,MAFlB,wBAAAN,EAAAO,SAAAb,6BAKA,IAWec,EAXL,CACRC,aAAc,kBAAMhB,EAAG,yBACvBiB,uBAAwB,kBACtBjB,EAAG,mCACLkB,UAAW,SAACC,GAAD,OACTnB,EAAG,gBAAAoB,OAA8BD,EAA9B,WACLE,aAAc,kBAAMrB,EAAG,kCACvBsB,YAAa,SAACC,EAAiBC,GAAlB,OACXxB,EAAG,kBAAAoB,OAAiCI,EAAjC,KAAAJ,OAAgDG,EAAhD,YCHP,SAASE,EAAgBC,GAA2B,IAC1CC,EAA0BD,EAA1BC,MAAOC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,QAD4BC,EAEZC,mBAAS,IAFGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE3CK,EAF2CH,EAAA,GAE9BI,EAF8BJ,EAAA,GAO5CK,EAAeT,EAAMU,OAAO,SAACC,GACjC,GAAI,UAAWA,EAAM,OAAOA,EAAKC,MAAMC,MAAM,IAAIC,OAAOP,EAAa,MACrE,GAAI,gBAAiBI,EACnB,OAAOA,EAAKI,YAAYF,MAAM,IAAIC,OAAOP,EAAa,MACxD,MAAM,IAAIS,MAAM,wDAElB,OACEC,EAAAxC,EAAAyC,cAAAD,EAAAxC,EAAA0C,SAAA,KACEF,EAAAxC,EAAAyC,cAAA,UAAKnB,GACLkB,EAAAxC,EAAAyC,cAACE,EAAA3C,EAAM4C,OAAP,CACEC,SAde,SAACC,GACpB,IAAMhB,EAAcgB,EAAMC,OAAOC,MACjCjB,EAAeD,IAaXmB,YAAY,8IAEdT,EAAAxC,EAAAyC,cAAA,WACAD,EAAAxC,EAAAyC,cAAA,WACAD,EAAAxC,EAAAyC,cAACS,EAAAlD,EAAD,CACEmD,WAAYnB,EACZR,QAASA,EACT4B,UAAQ,EACRC,WAAY,SAACnB,GACX,GAAI,UAAWA,EACb,OACEM,EAAAxC,EAAAyC,cAACS,EAAAlD,EAAKsD,KAAN,CAAWC,IAAKrB,EAAKsB,SAClBtB,EAAKuB,cAAgBvB,EAAKwB,eAAe,eACxClB,EAAAxC,EAAAyC,cAACkB,EAAA,EAAD,CAAMC,GAAE,GAAA7C,OAAKmB,EAAKsB,QAAV,MAAuBtB,EAAKC,OAEpCK,EAAAxC,EAAAyC,cAAA,QAAMoB,MAAO,CAAEC,QAAS,KAAQ5B,EAAKC,QAItC,GAAI,gBAAiBD,EAC1B,OACEM,EAAAxC,EAAAyC,cAACS,EAAAlD,EAAKsD,KAAN,CAAWC,IAAKrB,EAAK6B,WACnBvB,EAAAxC,EAAAyC,cAACkB,EAAA,EAAD,CAAMC,GAAE,GAAA7C,OAAKmB,EAAK6B,UAAV,MAAyB7B,EAAKI,cAI1C,MAAM,IAAIC,MACR,0DAad,SAASyB,EAAuB3C,GAAoC,IAAA4C,EACxCvC,mBAAgB,IADwBwC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAqC,EAAA,GAC3D1C,EAD2D2C,EAAA,GACpDC,EADoDD,EAAA,GAAAE,EAEpC1C,oBAAkB,GAFkB2C,EAAAzC,OAAAC,EAAA,EAAAD,CAAAwC,EAAA,GAE3D5C,EAF2D6C,EAAA,GAElDC,EAFkDD,EAAA,GAkBlE,OAdAE,oBAAU,WAAM,SAAAC,IAAA,OAAAA,EAAA5C,OAAA6C,EAAA,EAAA7C,CAAA7B,EAAAC,EAAA0E,KAEd,SAAA9E,IAAA,IAAA+E,EAAA,OAAA5E,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEsBiB,EAAMuD,QAF5B,OAEQrD,EAFRrB,EAAAI,KAGI6D,EAAS5C,GAHbrB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA2E,GAAA3E,EAAA,SAKI4E,QAAQC,MAAR7E,EAAA2E,IALJ,QAOEP,GAAW,GAPb,yBAAApE,EAAAO,SAAAb,EAAA,kBAFcoF,MAAAC,KAAAC,WACdZ,GAAW,GADG,WAAAE,EAAAQ,MAAAC,KAAAC,WAWdC,IACC,CAAC9D,EAAMuD,UAGRpC,EAAAxC,EAAAyC,cAACrB,EAAD,CAAiBE,MAAOD,EAAMC,MAAOC,MAAOA,EAAOC,QAASA,IAIhE,SAAS4D,IACP,OACE5C,EAAAxC,EAAAyC,cAACuB,EAAD,CACEY,QAASlE,EAAIC,eACbW,MAAM,4GASZ,SAAS+D,EAAWhE,GAClB,IAAMP,EAAYO,EAAMe,MAAMkD,OAAOxE,UACrC,OACE0B,EAAAxC,EAAAyC,cAACuB,EAAD,CACEY,QAASlE,EAAIG,UAAUC,GACvBQ,MAAM,0ICjDGiE,MAzDf,SAAqBlE,GAAc,IAAAI,EACHC,mBAA+B,IAD5BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC1B+D,EAD0B7D,EAAA,GACjB8D,EADiB9D,EAAA,GAAAsC,EAEHvC,oBAAkB,GAFfwC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAqC,EAAA,GAE1BzC,EAF0B0C,EAAA,GAEjBI,EAFiBJ,EAAA,GA0CjC,OAtCAK,oBAAU,WACRD,GAAW,GACX5D,EACGE,yBACA8E,KAAK,SAACC,GACLrB,GAAW,GAGX,IAAIsB,EAA+BD,EAAoBE,IACrD,SAACC,GACC,OAAOlE,OAAAmE,EAAA,EAAAnE,CAAA,GACFkE,EADL,CAEEE,GAAIF,EAAQE,GAAGC,WACfC,OAAQJ,EAAQI,OAAOL,IAAI,SAACM,GAAD,OAAAvE,OAAAmE,EAAA,EAAAnE,CAAA,GACtBuE,EADsB,CAEzBH,GAAIG,EAAMH,GAAGC,mBAKrBR,EAAWG,KAEZQ,MAAM,SAACrB,GACNT,GAAW,GACXQ,QAAQuB,IAAItB,MAEf,IAYCvD,EAAgBgB,EAAAxC,EAAAyC,cAAC6D,EAAA,EAAD,MACG,IAAnBd,EAAQe,OAAqB/D,EAAAxC,EAAAyC,cAAA,4BAE/BD,EAAAxC,EAAAyC,cAAC+D,EAAAxG,EAAD,CACEwF,QAASA,EACT3C,SAAUxB,EAAMwB,SAChB4D,YAAY,EACZC,KAAK,QACLC,aAAc,CAACtF,EAAMP,UAAWO,EAAMH,SACtC0F,WAAY,CAAEC,MAAO,OAAQ7D,MAAO,KAAM8D,SAAU,UACpDC,WAAY,CAAE9E,YAAyB+E,wDCxD7C,IAAMC,EAAUC,IAAKD,QAQfE,EAA6B,CACjC,CAAEC,UAAW,qBAAOC,SAAU,0GAAsBC,UAAW,QAC/D,CAAEF,UAAW,SAAKC,SAAU,uCAAUC,UAAW,QACjD,CAAEF,UAAW,eAAMC,SAAU,sHAAwBC,UAAW,QAChE,CAAEF,UAAW,qBAAOC,SAAU,gHAAuBC,UAAW,QAChE,CAAEF,UAAW,qBAAOC,SAAU,iCAASC,UAAW,QAClD,CAAEF,UAAW,qBAAOC,SAAU,6CAAWC,UAAW,QACpD,CAAEF,UAAW,2BAAQC,SAAU,2EAAgBC,UAAW,QAC1D,CAAEF,UAAW,gBAAOC,SAAU,yDAAaC,UAAW,QACtD,CAAEF,UAAW,GAAIC,SAAU,gHAAuBC,UAAW,QAC7D,CAAEF,UAAW,2BAAQC,SAAU,2EAAgBC,UAAW,QAC1D,CAAEF,UAAW,2BAAQC,SAAU,kIAA0BC,UAAW,SACpE,CAAEF,UAAW,eAAMC,SAAU,yDAAaC,UAAW,SACrD,CAAEF,UAAW,2BAAQC,SAAU,gHAAuBC,UAAW,SACjE,CAAEF,UAAW,2BAAQC,SAAU,iHAAwBC,UAAW,UAG9DC,EAAqC,CACzC,CACEhE,IAAK,QACL+D,UAAW,iBACXE,OAAQ,SAACC,EAAWC,EAAoBC,GACtC,OACEnF,EAAAxC,EAAAyC,cAACD,EAAAxC,EAAM0C,SAAP,KACEF,EAAAxC,EAAAyC,cAAA,OAAK6E,UAAU,aACb9E,EAAAxC,EAAAyC,cAACmF,EAAA,EAAD,CAAMC,KAAK,iBADb,IACgCH,EAAOI,WAEvCtF,EAAAxC,EAAAyC,cAAA,OAAK6E,UAAU,QACb9E,EAAAxC,EAAAyC,cAACmF,EAAA,EAAD,CAAMC,KAAK,gBADb,IAC+BH,EAAOK,SAM9C,CACExE,IAAK,SACLiE,OAAQ,SAACC,EAAWC,EAAoBC,GACtC,IAAMK,EACJb,EAAYc,KAAK,SAACJ,GAAD,OAAUA,EAAKT,YAAcM,EAAOQ,cACrDf,EAAY,GACd,OACE3E,EAAAxC,EAAAyC,cAAAD,EAAAxC,EAAA0C,SAAA,KACEF,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAA,QACEnB,MAAO0G,EAAWX,SAClBC,UAAS,cAAAvG,OAAgBiH,EAAWV,YAEnCI,EAAOQ,YALZ,OAQGR,EAAOS,QAEV3F,EAAAxC,EAAAyC,cAAA,OAAKnB,MAAOoG,EAAOU,KACjB5F,EAAAxC,EAAAyC,cAACmF,EAAA,EAAD,CAAMC,KAAK,SADb,IACwBH,EAAOU,SAoH1BC,MAjGf,SAAsBhH,GAAc,IAAAI,EACIC,mBAAuB,OAD3BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC3B6G,EAD2B3G,EAAA,GACd4G,EADc5G,EAAA,GAAAsC,EAENvC,oBAAS,GAFHwC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAqC,EAAA,GAE3BuE,EAF2BtE,EAAA,GAEnBuE,EAFmBvE,EAAA,GAAAE,EAIc1C,mBAAiB,KAJ/B2C,EAAAzC,OAAAC,EAAA,EAAAD,CAAAwC,EAAA,GAI3BsE,EAJ2BrE,EAAA,GAITsE,EAJStE,EAAA,GAiClC,GA3BAE,oBAAU,WACR,IAAMqE,EAAe,WACnBL,EAAeM,OAAOC,WAAaD,OAAOE,YAAc,OAAS,QAInE,OAFAH,IACAC,OAAOG,iBAAiB,SAAUJ,GAC3B,WACLC,OAAOI,oBAAoB,SAAUL,KAEtC,IAEHrE,oBAAU,WAAM,IAAA2E,EC7FX,SAAAC,GAAoE,IAA1CC,EAA0CD,EAA1CC,YAAaC,EAA6BF,EAA7BE,QAASC,EAAoBH,EAApBG,SACjDd,EAASY,EAAc,IAAM,EAE7BG,EAAaD,EACdzD,IAAI,SAAC2D,GAAD,OAAOA,EAAEC,UACbC,OAAO,SAACC,EAAKC,EAAaC,GACzB,IAAMC,EAASR,EAASO,GAexB,OAdmB,IAAfC,EAAOC,KAAaH,EAAcP,EAGpCO,GAAe,EAEC,IAAfE,EAAOC,KAAavB,GACL,IAAfsB,EAAOC,MAAcvB,EAGtBoB,GAAe,EACNA,EAAcP,IAEvBO,GAAe,IAEVI,KAAKL,IAAIA,EAAKC,IACpB,IAWL,OARIL,EAAa,GACfA,GAAc,GACLA,EAAa,IAEtBA,GAAc,EACdf,GAAUA,GAEZ1D,QAAQuB,IAAI,CAAE+C,cAAaC,UAASE,aAAYf,WACzC,CAAEe,aAAYf,UD6DYyB,CAAe,CAE5Cb,YAAa/H,EAAM+H,YAAc,GACjCC,QAASa,MAASC,aAClBb,SAAUjI,EAAMiI,WAJVC,EADML,EACNK,WAAYf,EADNU,EACMV,OAMpBG,EAAoByB,OAAOb,IAC3Bd,EAAUD,IACT,CAACnH,EAAMiI,SAAUjI,EAAM+H,cAOtB/H,EAAMG,QAAS,OAAOgB,EAAAxC,EAAAyC,cAAC6D,EAAA,EAAD,MAI1B,IAFA,IAAI+D,EAAuB,GAElBR,EAAI,EAAGA,GAAK,EAAGA,IACtBQ,EAASR,GAAK,CACZS,KAAMC,iBAAeV,GACrBW,QAAS,IAIb,IAAKnJ,EAAMiI,UAAYjI,EAAMiI,SAAS/C,QAAU,EAC9C,OAAO/D,EAAAxC,EAAAyC,cAAA,8OA7CyB,IAAAgI,GAAA,EAAAC,GAAA,EAAAC,OAAA3D,EAAA,IA+ClC,QAAA4D,EAAAC,EAAcxJ,EAAMiI,SAApBwB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAzK,QAAA4K,MAAAP,GAAA,EAA8B,KAArBQ,EAAqBL,EAAA5H,OAEzBiI,EAAE1I,QACQ,IAAV0I,EAAElB,KAAcvB,GAAoB,IAAVyC,EAAElB,MAAgBvB,GAAoB,IAAVyC,EAAElB,MAEzDM,EAASY,EAAExB,SAASe,QAAQU,KAAKD,IApDH,MAAAE,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAuDlC,IAAMU,EAAchB,EAASxE,IAAI,SAACwD,EAASQ,GACzC,OAAIR,EAAQmB,QAAQjE,OAAS,EAEzB/D,EAAAxC,EAAAyC,cAACwE,EAAD,CAASqE,IAAKjC,EAAQiB,KAAM/G,IAAK6G,OAAOP,IACtCrH,EAAAxC,EAAAyC,cAAC8I,EAAA,EAAD,CACEpI,WAAYkG,EAAQmB,QACpBjD,QAASA,EACTb,KAAK,QACLY,UAAU,WACVkE,YAAY,EACZC,YAAY,EACZC,OAAQ,SAACC,GAAD,OACNA,EAAElC,QAAUkC,EAAE7D,UAAY6D,EAAE5B,IAAM4B,EAAExD,OAASwD,EAAEzD,WAAayD,EAAEvD,QAK5D,OAGd,OACE5F,EAAAxC,EAAAyC,cAAAD,EAAAxC,EAAA0C,SAAA,KACEF,EAAAxC,EAAAyC,cAAA,OAAK6E,UAAU,iBAAf,8FAEE9E,EAAAxC,EAAAyC,cAACmJ,EAAA,EAAD,CACEC,gBAAgB,SAChBC,kBAAkB,SAClBC,QAASvD,EACT3F,SAvDmB,SAAC2F,GAC1BC,EAAUD,GACVwD,IAAQC,KAAR,oDAAAlL,OAAyByH,EAAS,uCAAW,mDAA7C,yCAAkE,OAwDhEhG,EAAAxC,EAAAyC,cAACyJ,EAAA,EAAD,CACExD,iBAAkBA,EAClBJ,YAAaA,EACb6D,UAAU,GAETd,uBE3KM,SAASe,EAAc/K,GACpC,IAAMgL,EAAQnC,MACRoC,EAAYpC,IAAO7I,EAAMkL,UAAUD,WACnCE,EAAatC,IAAO7I,EAAMkL,UAAUC,YAEpCpD,EAAciD,EAAMI,KAAKH,EAAUI,QAAQ,QAAS,QAAU,EAC9DC,EAAaH,EAAWC,KAAKH,EAAW,QAExCM,EACGP,EAAMQ,UADTD,EAEGN,EAAUO,UAFbD,EAGIJ,EAAWK,UAEfC,EAAoB9C,KAAK+C,OAC3BH,EAAUA,IAAYA,EAAWA,GAAY,KAGjD,OACEpK,EAAAxC,EAAAyC,cAAAD,EAAAxC,EAAA0C,SAAA,KACEF,EAAAxC,EAAAyC,cAAA,yDACW8H,iBAAe8B,EAAMlC,aAAe,GAD/C,KACqDkC,EAAMW,OAAO,MAAO,IADzE,gGAGqB5D,EAHrB,iBAGsCuD,EAHtC,yEAGiE,IAC9DvD,EAAc,GAJjB,iBAIyBuD,EAAa,GAJtC,MAKIvD,EAAc,IAAM,IAAM,EAAI,uCAAW,mDAL7C,KAOA5G,EAAAxC,EAAAyC,cAAA,iHACsB6J,EAAUU,OAAO,KADvC,MACgDR,EAAWQ,OAAO,KADlE,MAGAxK,EAAAxC,EAAAyC,cAACwK,EAAA,EAAD,CAAUC,QAASJ,IAClB1D,EAAcuD,GACbnK,EAAAxC,EAAAyC,cAAC0K,EAAA,EAAD,CACEtF,KAAK,UACLuF,UAAQ,EACRpB,QAAQ,mbC1BH,SAASqB,EAAShM,GAAc,IAAAI,EACXC,wBAAiCsF,GADtBrF,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACtC8K,EADsC5K,EAAA,GAC3B2L,EAD2B3L,EAAA,GAAAsC,EAEbvC,mBAAuB,IAFVwC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAqC,EAAA,GAEtCqF,EAFsCpF,EAAA,GAE5BqJ,EAF4BrJ,EAAA,GAAAE,EAGf1C,oBAAkB,GAHH2C,EAAAzC,OAAAC,EAAA,EAAAD,CAAAwC,EAAA,GAGtC5C,EAHsC6C,EAAA,GAG7BC,EAH6BD,EAAA,GAAAmJ,EAIT9L,mBAAiB,GAJR+L,EAAA7L,OAAAC,EAAA,EAAAD,CAAA4L,EAAA,GAItCE,EAJsCD,EAAA,GAI1BE,EAJ0BF,EAAA,GAMvCG,EAAY,eAAAzE,EAAAvH,OAAA6C,EAAA,EAAA7C,CAAA7B,EAAAC,EAAA0E,KAAG,SAAA9E,EACnBkB,EACAI,EACAqL,GAHmB,IAAAsB,EAAA,OAAA9N,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAKnBkE,GAAW,GALQpE,EAAAC,KAAA,EAOjB2N,aAAaC,QAAQ,YAAajN,GAClCgN,aAAaC,QAAQ,UAAW7M,GARfhB,EAAAE,KAAA,EAUMM,EAAIO,YAAYC,EAASqL,EAAUyB,aAVzC,OAUX1E,EAVWpJ,EAAAI,KAYjBiN,EAAYjE,GACZhF,GAAW,GAbMpE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA2E,GAAA3E,EAAA,SAejBoE,GAAW,GACXiJ,EAAY,IACRrN,EAAA2E,GAAM/E,UAGRgF,QAAQuB,IAAInG,EAAA2E,GAAM/E,SAASU,MAC3BsE,QAAQuB,IAAInG,EAAA2E,GAAM/E,SAASmO,QAC3BnJ,QAAQuB,IAAInG,EAAA2E,GAAM/E,SAASoO,UAClBhO,EAAA2E,GAAMsJ,SAIfrJ,QAAQuB,IAAInG,EAAA2E,GAAMsJ,SAClBnC,IAAQjH,MAAM,oFAGdD,QAAQuB,IAAI,QAASnG,EAAA2E,GAAMmH,SAE7BlH,QAAQuB,IAAInG,EAAA2E,GAAMuJ,QAjCD,yBAAAlO,EAAAO,SAAAb,EAAA,kBAAH,gBAAAyO,EAAAC,EAAAC,GAAA,OAAApF,EAAAnE,MAAAC,KAAAC,YAAA,GAN2BsJ,EA2CdnN,EAAMe,MAAMkD,OAAnCpE,EA3CqCsN,EA2CrCtN,QAASJ,EA3C4B0N,EA2C5B1N,UAGjByD,oBAAU,WAAM,SAAAkK,IAAA,OAAAA,EAAA7M,OAAA6C,EAAA,EAAA7C,CAAA7B,EAAAC,EAAA0E,KACd,SAAAgK,IAAA,IAAAC,EAAA,OAAA5O,EAAAC,EAAAC,KAAA,SAAA2O,GAAA,cAAAA,EAAAzO,KAAAyO,EAAAxO,MAAA,cAAAwO,EAAAzO,KAAA,EAAAyO,EAAAxO,KAAA,EAEoBM,EAAIM,eAFxB,QAEU2N,EAFVC,EAAAtO,QAIMgN,EAAaqB,GACbhB,EACEzD,MAASuC,KAAKvC,IAAOyE,EAAErC,WAAWI,QAAQ,QAAS,QAAU,IANrEkC,EAAAxO,KAAA,eAAAwO,EAAAzO,KAAA,EAAAyO,EAAA/J,GAAA+J,EAAA,iCAAAA,EAAAnO,SAAAiO,EAAA,kBADc1J,MAAAC,KAAAC,YAAA,WAAAuJ,EAAAzJ,MAAAC,KAAAC,WAYd2J,IACC,IAEHtK,oBAAU,WACJgI,GAAWqB,EAAa9M,EAAWI,EAASqL,IAC/C,CAACzL,EAAWI,EAASqL,IAQxB,OACE/J,EAAAxC,EAAAyC,cAAAD,EAAAxC,EAAA0C,SAAA,KACEF,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAACqM,EAAD,CACEhO,UAAWA,EACXI,QAASA,EACT2B,SAZkB,SAACG,EAAiB+L,GAA0B,IAAAC,EAAApN,OAAAC,EAAA,EAAAD,CACzCoB,EADyC,GAC/DlC,EAD+DkO,EAAA,GACpD9N,EADoD8N,EAAA,GAE9DnP,EAAG,IAAAkB,OAAOD,EAAP,KAAAC,OAAoBG,GAC7BG,EAAM4N,QAAQ/D,KAAKrL,OAYjB2C,EAAAxC,EAAAyC,cAAA,WAAM8J,GAAa/J,EAAAxC,EAAAyC,cAAC2J,EAAD,CAAeG,UAAWA,KAC7C/J,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAACyM,EAAD,CACE1N,QAASA,EACT8H,SAAUA,EACVF,YAAasE,MC5FvB,IAAMyB,IAAeC,GAGP,WACZ,IAAMC,EAAYxG,OAAOyG,UAAUD,UAAUE,cAC7C,MAAO,mBAAmBC,KAAKH,IAQ7BI,IAJe5G,OAAOyG,UACbI,YAIPP,IAAcQ,IAAG,YAAa,cAGpC,IAAMC,GAAiBC,cAEvBD,GAAeE,OAAO,SAACC,EAAoBC,GACzC,IAAMnQ,EAAMkQ,EAASE,SAAWF,EAASG,OAASH,EAASI,KACvDhB,IAAcQ,IAAG,MAAO9P,KCnB9B,IAAMuQ,GAAcC,QACW,cAA7BxH,OAAOkH,SAASO,UAEe,UAA7BzH,OAAOkH,SAASO,UAEhBzH,OAAOkH,SAASO,SAASlO,MACvB,2DA8CN,SAASmO,GAAgBC,EAAepC,GACtCkB,UAAUmB,cACPC,SAASF,GACT9K,KAAK,SAACiL,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACf1B,UAAUmB,cAAcQ,YAI1BnM,QAAQuB,IACN,gHAKE+H,GAAUA,EAAO8C,UACnB9C,EAAO8C,SAASP,KAMlB7L,QAAQuB,IAAI,sCAGR+H,GAAUA,EAAO+C,WACnB/C,EAAO+C,UAAUR,UAO5BvK,MAAM,SAACrB,GACND,QAAQC,MAAM,4CAA6CA,mBCjGjEqM,IAAS5J,OAAOhF,EAAAxC,EAAAyC,cF2BD,WACb,OACED,EAAAxC,EAAAyC,cAAAD,EAAAxC,EAAA0C,SAAA,KAEGyM,IACC3M,EAAAxC,EAAAyC,cAAC4O,EAAA,cAAD,CACEC,SAAU,CAAC,UACX9L,QAAS,CACP+L,UAAU,EACVC,YAAY,EACZC,UAAU,GAEZC,QAAQ,MAGZlP,EAAAxC,EAAAyC,cAACkP,EAAA,EAAD,CAAgBC,OAAQC,KACtBrP,EAAAxC,EAAAyC,cAACqP,EAAA,EAAD,CAAQ7C,QAASW,IACfpN,EAAAxC,EAAAyC,cAAAD,EAAAxC,EAAA0C,SAAA,KACEF,EAAAxC,EAAAyC,cAAA,cACED,EAAAxC,EAAAyC,cAACsP,EAAA,EAAD,CAAMC,KAAK,aAAaC,MAAM,QAC5BzP,EAAAxC,EAAAyC,cAACsP,EAAA,EAAKzO,KAAN,KACEd,EAAAxC,EAAAyC,cAACkB,EAAA,EAAD,CAAMC,GAAG,cAAT,sFAQNpB,EAAAxC,EAAAyC,cAAA,OAAK6E,UAAU,mBACb9E,EAAAxC,EAAAyC,cAACqP,EAAA,EAAD,KACEtP,EAAAxC,EAAAyC,cAACqP,EAAA,EAAD,CACEI,KAAK,mCACLC,UAAW9E,IAEb7K,EAAAxC,EAAAyC,cAACqP,EAAA,EAAD,CAAOI,KAAK,oBAAmBC,UAAW9M,IAC1C7C,EAAAxC,EAAAyC,cAACqP,EAAA,EAAD,CAAOI,KAAK,aAAaC,UAAW/M,IACpC5C,EAAAxC,EAAAyC,cAACqP,EAAA,EAAD,CACEI,KAAK,IACL1K,OAAQ,SAACnG,GACP,IAAMP,EAAYgN,aAAY,UACxB5M,EAAU4M,aAAY,QACtBsE,EAAU/Q,EAAM0O,SAASG,OAAS7O,EAAM0O,SAASI,KACvD,OAAIrP,GAAaI,EAEbsB,EAAAxC,EAAAyC,cAACqP,EAAA,EAAD,CAAUlO,GAAE,IAAA7C,OAAMD,EAAN,KAAAC,OAAmBG,GAAnBH,OAA6BqR,KAEjC5P,EAAAxC,EAAAyC,cAACqP,EAAA,EAAD,CAAUlO,GAAI,aAAewO,SAMjD5P,EAAAxC,EAAAyC,cAAA,yEACc,IACZD,EAAAxC,EAAAyC,cAAA,KACE4P,KAAK,4BACLtP,OAAO,SACPuP,IAAI,sBACJC,QAAS,SAACzP,GACJqM,IAAcQ,IAAG,YAAa,cALtC,iEElFE,MAAS6C,SAASC,eAAe,SDoB1C,SAAkBrE,GACvB,GAA6C,kBAAmBkB,UAAW,CAMzE,GAJkB,IAAIoD,IACnBtD,GACDvG,OAAOkH,SAASsC,MAEJM,SAAW9J,OAAOkH,SAAS4C,OAIvC,OAGF9J,OAAOG,iBAAiB,OAAQ,WAC9B,IAAMwH,EAAK,GAAAzP,OAAMqO,GAAN,sBAEPgB,IAgEV,SAAiCI,EAAepC,GAE9CwE,MAAMpC,GACH9K,KAAK,SAAC5F,GAEL,IAAM+S,EAAc/S,EAASoO,QAAQvO,IAAI,gBAEnB,MAApBG,EAASmO,QACO,MAAf4E,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5CxD,UAAUmB,cAAcsC,MAAMrN,KAAK,SAACiL,GAClCA,EAAaqC,aAAatN,KAAK,WAC7BmD,OAAOkH,SAASkD,aAKpB1C,GAAgBC,EAAOpC,KAG1BhI,MAAM,WACLtB,QAAQuB,IACN,mEArFA6M,CAAwB1C,EAAOpC,GAI/BkB,UAAUmB,cAAcsC,MAAMrN,KAAK,WACjCZ,QAAQuB,IACN,+GAMJkK,GAAgBC,EAAOpC,MCjC/BqC,CAbe,CACbU,UAAW,SAACR,GACV3E,IAAQmH,QAAQ,gBAAiB,IAEnCjC,SAAU,SAACP,GACTyC,KAAaD,QAAQ,CACnBnH,QAAS,gHACTqH,YAAa,8RACbC,UAAW,cACXf,QAAS,kBAAM1J,OAAOkH,SAASkD,QAAO,0CCrB5CM,EAAA3G,EAAA4G,EAAA,mCAAAjJ,IAAAgJ,EAAA,SAGahJ,EAAiB,sZAA4EkJ,MACxG","file":"static/js/main.c5d8e898.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n  ITrimester,\n  ILessonOld,\n  IFacultyWithGroups,\n  IFacultyOld,\n  IGroupOld,\n} from './constants';\n\n/** Wrapper for `axios.get` that returns `response`.data */\nasync function get<T = any>(url: string) {\n  const response = await axios.get<T>(url);\n  return response.data;\n}\n\nlet api = {\n  getFaculties: () => get<IFacultyOld[]>(`/data/faculties.json`),\n  getFacultiesWithGroups: () =>\n    get<IFacultyWithGroups[]>(`/data/facultiesWithGroups.json`),\n  getGroups: (facultyId: string) =>\n    get<IGroupOld[]>(`/data/groups/${facultyId}.json`),\n  getTrimester: () => get<ITrimester>(`/data/trimesters/current.json`),\n  getSchedule: (groupId: string, trimesterId: string | number) =>\n    get<ILessonOld[]>(`/data/schedule/${trimesterId}/${groupId}.json`),\n};\n\nexport default api;\n","import Input from 'antd/lib/input';\nimport List from 'antd/lib/list';\nimport React, { useEffect, useState } from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport api from './api';\nimport { IFacultyOld, IGroupOld } from './constants';\n\n/** Name of fields in source data, to take label and value */\ntype Item = IFacultyOld | IGroupOld;\ntype Items = Item[];\n\ntype UniversalListProps = {\n  title: string;\n  items: Items;\n  loading: boolean;\n};\n\n/**\n * Used for ListFaculties and ListGroups\n */\nfunction UniversalListPL(props: UniversalListProps) {\n  const { title, items, loading } = props;\n  const [searchValue, setSearchValue] = useState('');\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const searchValue = event.target.value;\n    setSearchValue(searchValue);\n  };\n  const itemsFiltred = items.filter((item) => {\n    if ('Group' in item) return item.Group.match(new RegExp(searchValue, 'i'));\n    if ('FacultyName' in item)\n      return item.FacultyName.match(new RegExp(searchValue, 'i'));\n    throw new Error('Unknown data format (ot IGroupOld nor IFacultyOld)');\n  });\n  return (\n    <>\n      <h2>{title}</h2>\n      <Input.Search\n        onChange={handleSearch}\n        placeholder=\"Начните вводить название...\"\n      />\n      <br />\n      <br />\n      <List<Item>\n        dataSource={itemsFiltred}\n        loading={loading}\n        bordered\n        renderItem={(item) => {\n          if ('Group' in item) {\n            return (\n              <List.Item key={item.IdGroup}>\n                {item.hasSchedule || !item.hasOwnProperty('hasSchedule') ? (\n                  <Link to={`${item.IdGroup}/`}>{item.Group}</Link>\n                ) : (\n                  <span style={{ opacity: 0.5 }}>{item.Group}</span>\n                )}\n              </List.Item>\n            );\n          } else if ('FacultyName' in item) {\n            return (\n              <List.Item key={item.IdFaculty}>\n                <Link to={`${item.IdFaculty}/`}>{item.FacultyName}</Link>\n              </List.Item>\n            );\n          } else\n            throw new Error(\n              'Unknown data format (ot IGroupOld nor IFacultyOld)'\n            );\n        }}\n      />\n    </>\n  );\n}\n\ninterface UniversalListContainerProps {\n  promise: Promise<Items>;\n  title: string;\n}\n\nfunction UniversalListContainer(props: UniversalListContainerProps) {\n  const [items, setItems] = useState<Items>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n    async function loadItems() {\n      try {\n        let items = await props.promise;\n        setItems(items);\n      } catch (error) {\n        console.error(error);\n      }\n      setLoading(false);\n    }\n    loadItems();\n  }, [props.promise]);\n\n  return (\n    <UniversalListPL title={props.title} items={items} loading={loading} />\n  );\n}\n\nfunction ListFaculties() {\n  return (\n    <UniversalListContainer\n      promise={api.getFaculties()}\n      title=\"Список факультетов\"\n    />\n  );\n}\n\ninterface MatchParams {\n  facultyId: string;\n}\n\nfunction ListGroups(props: RouteComponentProps<MatchParams>) {\n  const facultyId = props.match.params.facultyId;\n  return (\n    <UniversalListContainer\n      promise={api.getGroups(facultyId)}\n      title=\"Список групп\"\n    />\n  );\n}\n\nexport { ListFaculties, ListGroups };\n","import React, { useEffect, useState } from 'react';\nimport Cascader, {\n  CascaderOptionType,\n  FilledFieldNamesType,\n} from 'antd/lib/cascader';\nimport api from './api';\nimport { MatchParams } from './Schedule/Schedule';\nimport { Spin } from 'antd';\nimport { IFacultyWithGroups } from './constants';\nexport interface Props extends MatchParams {\n  onChange: (value: string[], selectedOptions?: CascaderOptionType[]) => void;\n}\n\nfunction SelectGroup(props: Props) {\n  const [options, setOptions] = useState<IFacultyWithGroups[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n    api\n      .getFacultiesWithGroups()\n      .then((facultiesWithGroups) => {\n        setLoading(false);\n        // TODO Это конечно костыль, но что поделаешь? По крайне мере так работает\n        // потому что Cascader ожидает, что id будет строкой\n        let convertedFacultiesWithGroups = facultiesWithGroups.map(\n          (faculty) => {\n            return {\n              ...faculty,\n              id: faculty.id.toString(),\n              groups: faculty.groups.map((group) => ({\n                ...group,\n                id: group.id.toString(),\n              })),\n            };\n          }\n        );\n        setOptions(convertedFacultiesWithGroups);\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.log(error);\n      });\n  }, []);\n\n  const filter = (\n    inputValue: string,\n    path: CascaderOptionType[],\n    names: FilledFieldNamesType\n  ) => {\n    return path.some((option) =>\n      option.name.match(new RegExp(inputValue, 'i'))\n    );\n  };\n\n  if (loading) return <Spin />;\n  if (options.length === 0) return <div>Options empty</div>;\n  return (\n    <Cascader\n      options={options}\n      onChange={props.onChange}\n      allowClear={false}\n      size=\"large\"\n      defaultValue={[props.facultyId, props.groupId]}\n      fieldNames={{ label: 'name', value: 'id', children: 'groups' }}\n      showSearch={{ filter: false ? filter : undefined }}\n    />\n  );\n}\n\nexport default SelectGroup;\n","import { Icon, message, Spin, Switch, Table, Tabs } from 'antd';\nimport { ColumnProps } from 'antd/lib/table';\nimport { TabsPosition } from 'antd/lib/tabs';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { ILessonOld, WEEK_DAY_NAMES } from '../constants';\nimport './TabsWeekDays.css';\nimport { findNearestDay } from './findNearestDay';\n\nconst TabPane = Tabs.TabPane;\n\ninterface ILessonType {\n  shortName: string;\n  fullName: string;\n  className: string;\n}\n\nconst LessonTypes: ILessonType[] = [\n  { shortName: 'вне', fullName: 'внеучебное занятие', className: 'lek0' },\n  { shortName: 'л', fullName: 'лекция', className: 'lek1' },\n  { shortName: 'пр', fullName: 'практическое занятие', className: 'lek2' },\n  { shortName: 'лаб', fullName: 'лабораторная работа', className: 'lek3' },\n  { shortName: 'зач', fullName: 'зачет', className: 'lek4' },\n  { shortName: 'экз', fullName: 'экзамен', className: 'lek5' },\n  { shortName: 'конс', fullName: 'консультация', className: 'lek6' },\n  { shortName: 'п/с', fullName: 'пересдача', className: 'lek7' },\n  { shortName: '', fullName: 'внеплановое занятие', className: 'lek8' },\n  { shortName: 'тест', fullName: 'тестирование', className: 'lek9' },\n  { shortName: 'подг', fullName: 'подготовительные курсы', className: 'lek10' },\n  { shortName: 'ол', fullName: 'олимпиада', className: 'lek11' },\n  { shortName: 'конф', fullName: 'научная конференция', className: 'lek12' },\n  { shortName: 'откр', fullName: 'день открытых дверей', className: 'lek13' },\n];\n\nconst columns: ColumnProps<ILessonOld>[] = [\n  {\n    key: 'first',\n    className: 'StartTime_Room',\n    render: (text: any, record: ILessonOld, index: number) => {\n      return (\n        <React.Fragment>\n          <div className=\"StartTime\">\n            <Icon type=\"clock-circle\" /> {record.StartTime}\n          </div>\n          <div className=\"Room\">\n            <Icon type=\"environment\" /> {record.Room}\n          </div>\n        </React.Fragment>\n      );\n    },\n  },\n  {\n    key: 'second',\n    render: (text: any, record: ILessonOld, index: number) => {\n      const lessonType =\n        LessonTypes.find((type) => type.shortName === record.LessonType) ||\n        LessonTypes[0];\n      return (\n        <>\n          <div>\n            <span\n              title={lessonType.fullName}\n              className={`LessonType ${lessonType.className}`}\n            >\n              {record.LessonType}\n            </span>\n            &nbsp;\n            {record.Lesson}\n          </div>\n          <div title={record.FIO}>\n            <Icon type=\"user\" /> {record.FIO}\n          </div>\n        </>\n      );\n    },\n  },\n];\n\ninterface Props {\n  loading: boolean;\n  schedule: ILessonOld[];\n  week_number: number;\n}\n\ninterface IWeekDay {\n  name: string;\n  lessons: ILessonOld[];\n}\n\nfunction TabsWeekDays(props: Props) {\n  const [tabPosition, setTabPosition] = useState<TabsPosition>('top');\n  const [parity, setParity] = useState(false);\n  /** Вкладка (день недели), которая будет открыта при загрузке */\n  const [defaultActiveKey, setDefaultActiveKey] = useState<string>('1');\n\n  useEffect(() => {\n    const handleResize = () => {\n      setTabPosition(window.innerWidth > window.innerHeight ? 'left' : 'top');\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    const { minWeekday, parity } = findNearestDay({\n      // +15 - костыль для второго триместра 2019 (потому что отчёт должен вестись с начала года, а не с начала семестра)\n      week_number: props.week_number + 15,\n      weekday: moment().isoWeekday(),\n      schedule: props.schedule,\n    });\n    setDefaultActiveKey(String(minWeekday));\n    setParity(parity);\n  }, [props.schedule, props.week_number]);\n\n  const handleParityChange = (parity: boolean) => {\n    setParity(parity);\n    message.info(`Показана ${parity ? 'четная' : 'нечетная'} неделя`, 1);\n  };\n\n  if (props.loading) return <Spin />;\n\n  let weekdays: IWeekDay[] = [];\n\n  for (let i = 1; i <= 7; i++) {\n    weekdays[i] = {\n      name: WEEK_DAY_NAMES[i],\n      lessons: [],\n    };\n  }\n\n  if (!props.schedule || props.schedule.length <= 1)\n    return <div>К сожалению, для этой группы нет расписания</div>;\n\n  for (let s of props.schedule) {\n    if (\n      !s.Error &&\n      (s.Odd === 0 || (parity && s.Odd === 2) || (!parity && s.Odd === 1))\n    )\n      weekdays[s.WeekDay].lessons.push(s);\n  }\n\n  const tabsContent = weekdays.map((weekday, i) => {\n    if (weekday.lessons.length > 0)\n      return (\n        <TabPane tab={weekday.name} key={String(i)}>\n          <Table\n            dataSource={weekday.lessons}\n            columns={columns}\n            size=\"small\"\n            className=\"Schedule\"\n            showHeader={false}\n            pagination={false}\n            rowKey={(r) =>\n              r.WeekDay + r.StartTime + r.Odd + r.Lesson + r.LessonType + r.FIO\n            }\n          />\n        </TabPane>\n      );\n    else return null;\n  });\n\n  return (\n    <>\n      <div className=\"switch-parity\">\n        Показать неделю: &nbsp;\n        <Switch\n          checkedChildren=\"ч\"\n          unCheckedChildren=\"н\"\n          checked={parity}\n          onChange={handleParityChange}\n        />\n      </div>\n      <Tabs\n        defaultActiveKey={defaultActiveKey}\n        tabPosition={tabPosition}\n        animated={false}\n      >\n        {tabsContent}\n      </Tabs>\n    </>\n  );\n}\n\nexport default TabsWeekDays;\n","import { ILessonOld } from '../constants/index';\n\ninterface Params {\n  /** Номер текущей недели с начала семестра */\n  week_number: number;\n  /** Текущий день недели, 0 - sunday, 1 - monday... */\n  weekday: number;\n  schedule: ILessonOld[];\n}\n\n/**\n * Поиск ближайшего следующего дня для которого есть расписание\n */\nexport function findNearestDay({ week_number, weekday, schedule }: Params) {\n  let parity = week_number % 2 === 0;\n  // .map нужен, потому что .reduce может работать только с plain массивами\n  let minWeekday = schedule\n    .map((v) => v.WeekDay)\n    .reduce((min, nextWeekday, i) => {\n      const lesson = schedule[i];\n      if (lesson.Odd === 0 && nextWeekday < weekday) {\n        // пара каждую неделю и на этой неделе этот день уже прошел\n        // => пара будет на следующей\n        nextWeekday += 7;\n      } else if (\n        (lesson.Odd === 1 && parity) ||\n        (lesson.Odd === 2 && !parity)\n      ) {\n        // пара не на этой неделе\n        nextWeekday += 7;\n      } else if (nextWeekday < weekday) {\n        // пара на этой неделе, но день уже прошел\n        nextWeekday += 14;\n      }\n      return Math.min(min, nextWeekday);\n    }, 15); // здесь минимальным днем передаем максимально невозможное число\n\n  // We need to correct minWeekday value a little bit\n  if (minWeekday > 14) {\n    minWeekday -= 14;\n  } else if (minWeekday > 7) {\n    // если пара в день на следующей неделе, надо поменять четность\n    minWeekday -= 7;\n    parity = !parity;\n  }\n  console.log({ week_number, weekday, minWeekday, parity });\n  return { minWeekday, parity };\n}\n","import { Alert, Progress } from 'antd';\nimport moment from 'moment';\nimport React from 'react';\nimport { ITrimester, WEEK_DAY_NAMES } from '../constants';\n\ninterface Props {\n  trimester: ITrimester;\n}\n\nexport default function TrimesterInfo(props: Props) {\n  const today = moment();\n  const dateStart = moment(props.trimester.dateStart);\n  const dateFinish = moment(props.trimester.dateFinish);\n\n  const week_number = today.diff(dateStart.startOf('week'), 'week') + 1;\n  const week_total = dateFinish.diff(dateStart, 'week');\n\n  const d = {\n    today: today.valueOf(),\n    start: dateStart.valueOf(),\n    finish: dateFinish.valueOf(),\n  };\n  const trimesterProgress = Math.round(\n    ((d.today - d.start) / (d.finish - d.start)) * 100\n  );\n\n  return (\n    <>\n      <div>\n        Сегодня {WEEK_DAY_NAMES[today.isoWeekday() % 7]}, {today.format('LL')}{' '}\n        {/* @TODO I need to do something with weeks and semesters */}\n        неделя в семестре {week_number} из {week_total}, неделя в году{' '}\n        {week_number + 15} из {week_total + 15} (\n        {(week_number + 15) % 2 === 0 ? 'Четная' : 'Нечетная'})\n      </div>\n      <div>\n        Прогресс семестра ({dateStart.format('L')} - {dateFinish.format('L')}):\n      </div>\n      <Progress percent={trimesterProgress} />\n      {week_number > week_total && (\n        <Alert\n          type=\"warning\"\n          showIcon\n          message=\"Учебный семестр закончился. Сейчас отображается расписание прошедшего семестра.\"\n        />\n      )}\n    </>\n  );\n}\n","import { message } from 'antd';\nimport moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport api from '../api';\nimport { ITrimester, IScheduleOld } from '../constants';\nimport SelectGroup from '../SelectGroup';\nimport TabsWeekDays from './TabsWeekDays';\nimport TrimesterInfo from './TrimesterInfo';\n\nexport interface MatchParams {\n  facultyId: string;\n  groupId: string;\n}\n\nexport interface Props extends RouteComponentProps<MatchParams> {}\n\nexport default function Schedule(props: Props) {\n  const [trimester, setTrimester] = useState<ITrimester | undefined>(undefined);\n  const [schedule, setSchedule] = useState<IScheduleOld>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [weekNumber, setWeekNumber] = useState<number>(0);\n\n  const loadSchedule = async (\n    facultyId: string,\n    groupId: string,\n    trimester: ITrimester\n  ) => {\n    setLoading(true);\n    try {\n      localStorage.setItem('facultyId', facultyId);\n      localStorage.setItem('groupId', groupId);\n\n      const schedule = await api.getSchedule(groupId, trimester.IdTrimester);\n\n      setSchedule(schedule);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      setSchedule([]);\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n        message.error('Нет соединения');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n      console.log(error.config);\n    }\n  };\n\n  const { groupId, facultyId } = props.match.params;\n\n  // Триместр загружаетс только один раз при componentDidMount\n  useEffect(() => {\n    async function loadTrimester() {\n      try {\n        const t = await api.getTrimester();\n        if (t) {\n          setTrimester(t);\n          setWeekNumber(\n            moment().diff(moment(t.dateStart).startOf('week'), 'week') + 1\n          );\n        }\n      } catch (error) {}\n    }\n    loadTrimester();\n  }, []);\n\n  useEffect(() => {\n    if (trimester) loadSchedule(facultyId, groupId, trimester);\n  }, [facultyId, groupId, trimester]);\n\n  const handleGroupChange = (value: string[], selectedOptions?: any) => {\n    let [facultyId, groupId] = value;\n    const url = `/${facultyId}/${groupId}`;\n    props.history.push(url);\n  };\n\n  return (\n    <>\n      <div>\n        <SelectGroup\n          facultyId={facultyId}\n          groupId={groupId}\n          onChange={handleGroupChange}\n        />\n      </div>\n      <div>{trimester && <TrimesterInfo trimester={trimester} />}</div>\n      <div>\n        <TabsWeekDays\n          loading={loading}\n          schedule={schedule}\n          week_number={weekNumber}\n        />\n      </div>\n    </>\n  );\n}\n","import { LocaleProvider, Menu } from 'antd';\nimport ru_RU from 'antd/lib/locale-provider/ru_RU';\nimport { Action, createBrowserHistory, Location } from 'history';\nimport 'moment/locale/ru';\nimport React from 'react';\nimport { Link, Redirect, Route, Router, Switch } from 'react-router-dom';\nimport ym, { YMInitializer } from 'react-yandex-metrika';\nimport { ListFaculties, ListGroups } from './Lists';\nimport Schedule from './Schedule/Schedule';\n\nconst isProduction = process.env.NODE_ENV === 'production';\n\n/** Detects if device is on iOS */\nconst isIos = () => {\n  const userAgent = window.navigator.userAgent.toLowerCase();\n  return /iphone|ipad|ipod/.test(userAgent);\n};\n/** Detects if device is in standalone mode */\nconst isInStandaloneMode = (): boolean => {\n  const nav: any = window.navigator;\n  return nav.standalone;\n};\n\nif (isIos() && isInStandaloneMode()) {\n  if (isProduction) ym('reachGoal', 'standalone');\n}\n\nconst browserHistory = createBrowserHistory();\n\nbrowserHistory.listen((location: Location, action: Action) => {\n  const url = location.pathname + location.search + location.hash;\n  if (isProduction) ym('hit', url);\n});\n\nexport default function App() {\n  return (\n    <>\n      {/* счетчик нужно инициализировать в начале а не в конце, иначе возникает ошибка при редиректе */}\n      {isProduction && (\n        <YMInitializer\n          accounts={[50381566]}\n          options={{\n            clickmap: true,\n            trackLinks: true,\n            webvisor: true,\n          }}\n          version=\"2\"\n        />\n      )}\n      <LocaleProvider locale={ru_RU}>\n        <Router history={browserHistory}>\n          <>\n            <header>\n              <Menu mode=\"horizontal\" theme=\"dark\">\n                <Menu.Item>\n                  <Link to=\"/faculties\">Расписание БГУ</Link>\n                </Menu.Item>\n                {/* <Menu.Item>\n                  <Link to=\"/about\">Об авторе</Link>\n                </Menu.Item> */}\n              </Menu>\n            </header>\n\n            <div className=\"content-wrapper\">\n              <Switch>\n                <Route\n                  path=\"/:facultyId(\\d+)/:groupId(\\d+)\"\n                  component={Schedule}\n                />\n                <Route path=\"/:facultyId(\\d+)\" component={ListGroups} />\n                <Route path=\"/faculties\" component={ListFaculties} />\n                <Route\n                  path=\"/\"\n                  render={(props: any) => {\n                    const facultyId = localStorage['facultyId'];\n                    const groupId = localStorage['groupId'];\n                    const postfix = props.location.search + props.location.hash;\n                    if (facultyId && groupId)\n                      return (\n                        <Redirect to={`/${facultyId}/${groupId}${postfix}`} />\n                      );\n                    else return <Redirect to={'/faculties' + postfix} />;\n                  }}\n                />\n              </Switch>\n            </div>\n\n            <footer>\n              Сделано с ❤{' '}\n              <a\n                href=\"https://vk.com/savinyurii\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                onClick={(event) => {\n                  if (isProduction) ym('reachGoal', 'click_vk');\n                }}\n              >\n                в Иркутске\n              </a>\n            </footer>\n          </>\n        </Router>\n      </LocaleProvider>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { message, notification } from 'antd';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nconst config = {\n  onSuccess: (registration: ServiceWorkerRegistration) => {\n    message.success('Offline ready', 1);\n  },\n  onUpdate: (registration: ServiceWorkerRegistration) => {\n    notification.success({\n      message: 'Доступно обновление',\n      description: 'Нажмите на это уведомление, чтобы обновить приложение',\n      placement: 'bottomRight',\n      onClick: () => window.location.reload(true),\n    });\n  },\n};\nserviceWorker.register(config);\n// serviceWorker.unregister();\n","export * from './interfaces';\n\n/** Названия дней недели */\nexport const WEEK_DAY_NAMES = 'Воскресенье_Понедельник_Вторник_Среда_Четверг_Пятница_Суббота_Воскресенье'.split(\n  '_'\n);\n"],"sourceRoot":""}